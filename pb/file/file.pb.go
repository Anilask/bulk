// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: file.proto

package file

import (
	common "bulk/pb/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadBulkFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId  string `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	CorrelationId  string `protobuf:"bytes,2,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
	MerchantUserId string `protobuf:"bytes,3,opt,name=merchantUserId,proto3" json:"merchantUserId,omitempty"`
	MerchantCode   string `protobuf:"bytes,4,opt,name=merchantCode,proto3" json:"merchantCode,omitempty"`
	FileName       string `protobuf:"bytes,5,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileContent    []byte `protobuf:"bytes,6,opt,name=fileContent,proto3" json:"fileContent,omitempty"`
	FileSize       int64  `protobuf:"varint,7,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	BulkName       string `protobuf:"bytes,8,opt,name=bulkName,proto3" json:"bulkName,omitempty"`
}

func (x *UploadBulkFileRequest) Reset() {
	*x = UploadBulkFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBulkFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBulkFileRequest) ProtoMessage() {}

func (x *UploadBulkFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBulkFileRequest.ProtoReflect.Descriptor instead.
func (*UploadBulkFileRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{0}
}

func (x *UploadBulkFileRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *UploadBulkFileRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *UploadBulkFileRequest) GetMerchantUserId() string {
	if x != nil {
		return x.MerchantUserId
	}
	return ""
}

func (x *UploadBulkFileRequest) GetMerchantCode() string {
	if x != nil {
		return x.MerchantCode
	}
	return ""
}

func (x *UploadBulkFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadBulkFileRequest) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

func (x *UploadBulkFileRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadBulkFileRequest) GetBulkName() string {
	if x != nil {
		return x.BulkName
	}
	return ""
}

type UploadBulkFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string     `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string     `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ResponseTime    string     `protobuf:"bytes,3,opt,name=responseTime,proto3" json:"responseTime,omitempty"`
	TransactionId   string     `protobuf:"bytes,4,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	ReferenceNumber string     `protobuf:"bytes,5,opt,name=referenceNumber,proto3" json:"referenceNumber,omitempty"`
	File            *File      `protobuf:"bytes,7,opt,name=file,proto3,oneof" json:"file,omitempty"`
	Errors          *ErrorData `protobuf:"bytes,6,opt,name=errors,proto3,oneof" json:"errors,omitempty"`
}

func (x *UploadBulkFileResponse) Reset() {
	*x = UploadBulkFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBulkFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBulkFileResponse) ProtoMessage() {}

func (x *UploadBulkFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBulkFileResponse.ProtoReflect.Descriptor instead.
func (*UploadBulkFileResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{1}
}

func (x *UploadBulkFileResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *UploadBulkFileResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *UploadBulkFileResponse) GetResponseTime() string {
	if x != nil {
		return x.ResponseTime
	}
	return ""
}

func (x *UploadBulkFileResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *UploadBulkFileResponse) GetReferenceNumber() string {
	if x != nil {
		return x.ReferenceNumber
	}
	return ""
}

func (x *UploadBulkFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UploadBulkFileResponse) GetErrors() *ErrorData {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ErrorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	Details      string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ErrorData) Reset() {
	*x = ErrorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorData) ProtoMessage() {}

func (x *ErrorData) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorData.ProtoReflect.Descriptor instead.
func (*ErrorData) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorData) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ErrorData) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BulkId         string `protobuf:"bytes,1,opt,name=bulkId,proto3" json:"bulkId,omitempty"`
	UploadAt       string `protobuf:"bytes,2,opt,name=uploadAt,proto3" json:"uploadAt,omitempty"`
	FileName       string `protobuf:"bytes,3,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize       int64  `protobuf:"varint,4,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	MerchantUserId string `protobuf:"bytes,5,opt,name=merchantUserId,proto3" json:"merchantUserId,omitempty"`
	Status         int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{3}
}

func (x *File) GetBulkId() string {
	if x != nil {
		return x.BulkId
	}
	return ""
}

func (x *File) GetUploadAt() string {
	if x != nil {
		return x.UploadAt
	}
	return ""
}

func (x *File) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *File) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *File) GetMerchantUserId() string {
	if x != nil {
		return x.MerchantUserId
	}
	return ""
}

func (x *File) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateBulkStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId  string  `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	BulkId         string  `protobuf:"bytes,2,opt,name=bulkId,proto3" json:"bulkId,omitempty"`
	Status         int32   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Reason         *string `protobuf:"bytes,4,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	MerchantUserId *string `protobuf:"bytes,5,opt,name=merchantUserId,proto3,oneof" json:"merchantUserId,omitempty"`
	MerchantCode   *string `protobuf:"bytes,6,opt,name=merchantCode,proto3,oneof" json:"merchantCode,omitempty"`
}

func (x *UpdateBulkStatusRequest) Reset() {
	*x = UpdateBulkStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBulkStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBulkStatusRequest) ProtoMessage() {}

func (x *UpdateBulkStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBulkStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateBulkStatusRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateBulkStatusRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *UpdateBulkStatusRequest) GetBulkId() string {
	if x != nil {
		return x.BulkId
	}
	return ""
}

func (x *UpdateBulkStatusRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateBulkStatusRequest) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *UpdateBulkStatusRequest) GetMerchantUserId() string {
	if x != nil && x.MerchantUserId != nil {
		return *x.MerchantUserId
	}
	return ""
}

func (x *UpdateBulkStatusRequest) GetMerchantCode() string {
	if x != nil && x.MerchantCode != nil {
		return *x.MerchantCode
	}
	return ""
}

type UpdateBulkStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ResponseTime    string `protobuf:"bytes,3,opt,name=responseTime,proto3" json:"responseTime,omitempty"`
	TransactionId   string `protobuf:"bytes,4,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	ReferenceNumber string `protobuf:"bytes,5,opt,name=referenceNumber,proto3" json:"referenceNumber,omitempty"`
	BulkId          string `protobuf:"bytes,6,opt,name=bulkId,proto3" json:"bulkId,omitempty"`
	Status          int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateBulkStatusResponse) Reset() {
	*x = UpdateBulkStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBulkStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBulkStatusResponse) ProtoMessage() {}

func (x *UpdateBulkStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBulkStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateBulkStatusResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateBulkStatusResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *UpdateBulkStatusResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *UpdateBulkStatusResponse) GetResponseTime() string {
	if x != nil {
		return x.ResponseTime
	}
	return ""
}

func (x *UpdateBulkStatusResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *UpdateBulkStatusResponse) GetReferenceNumber() string {
	if x != nil {
		return x.ReferenceNumber
	}
	return ""
}

func (x *UpdateBulkStatusResponse) GetBulkId() string {
	if x != nil {
		return x.BulkId
	}
	return ""
}

func (x *UpdateBulkStatusResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type BulkFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId        string  `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	MerchantCode         string  `protobuf:"bytes,2,opt,name=merchantCode,proto3" json:"merchantCode,omitempty"`
	BulkDisbursementId   *string `protobuf:"bytes,3,opt,name=bulkDisbursementId,proto3,oneof" json:"bulkDisbursementId,omitempty"`
	BulkDisbursementName *string `protobuf:"bytes,4,opt,name=bulkDisbursementName,proto3,oneof" json:"bulkDisbursementName,omitempty"`
	Uploader             *string `protobuf:"bytes,5,opt,name=uploader,proto3,oneof" json:"uploader,omitempty"`
	Status               *int32  `protobuf:"varint,6,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Page                 int32   `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32   `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	StartDate            *string `protobuf:"bytes,10,opt,name=startDate,proto3,oneof" json:"startDate,omitempty"`
	EndDate              *string `protobuf:"bytes,11,opt,name=endDate,proto3,oneof" json:"endDate,omitempty"`
}

func (x *BulkFilesRequest) Reset() {
	*x = BulkFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkFilesRequest) ProtoMessage() {}

func (x *BulkFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkFilesRequest.ProtoReflect.Descriptor instead.
func (*BulkFilesRequest) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{6}
}

func (x *BulkFilesRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *BulkFilesRequest) GetMerchantCode() string {
	if x != nil {
		return x.MerchantCode
	}
	return ""
}

func (x *BulkFilesRequest) GetBulkDisbursementId() string {
	if x != nil && x.BulkDisbursementId != nil {
		return *x.BulkDisbursementId
	}
	return ""
}

func (x *BulkFilesRequest) GetBulkDisbursementName() string {
	if x != nil && x.BulkDisbursementName != nil {
		return *x.BulkDisbursementName
	}
	return ""
}

func (x *BulkFilesRequest) GetUploader() string {
	if x != nil && x.Uploader != nil {
		return *x.Uploader
	}
	return ""
}

func (x *BulkFilesRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *BulkFilesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BulkFilesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *BulkFilesRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *BulkFilesRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

type BulkFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseCode    string             `protobuf:"bytes,1,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
	ResponseMessage string             `protobuf:"bytes,2,opt,name=responseMessage,proto3" json:"responseMessage,omitempty"`
	ResponseTime    string             `protobuf:"bytes,3,opt,name=responseTime,proto3" json:"responseTime,omitempty"`
	TransactionId   string             `protobuf:"bytes,4,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	ReferenceNumber string             `protobuf:"bytes,5,opt,name=referenceNumber,proto3" json:"referenceNumber,omitempty"`
	BulkList        []*BulkFile        `protobuf:"bytes,6,rep,name=bulkList,proto3" json:"bulkList,omitempty"`
	Pagination      *common.Pagination `protobuf:"bytes,7,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *BulkFilesResponse) Reset() {
	*x = BulkFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkFilesResponse) ProtoMessage() {}

func (x *BulkFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkFilesResponse.ProtoReflect.Descriptor instead.
func (*BulkFilesResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{7}
}

func (x *BulkFilesResponse) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *BulkFilesResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *BulkFilesResponse) GetResponseTime() string {
	if x != nil {
		return x.ResponseTime
	}
	return ""
}

func (x *BulkFilesResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *BulkFilesResponse) GetReferenceNumber() string {
	if x != nil {
		return x.ReferenceNumber
	}
	return ""
}

func (x *BulkFilesResponse) GetBulkList() []*BulkFile {
	if x != nil {
		return x.BulkList
	}
	return nil
}

func (x *BulkFilesResponse) GetPagination() *common.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type BulkFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedDateTime      string               `protobuf:"bytes,1,opt,name=createdDateTime,proto3" json:"createdDateTime,omitempty"`
	BulkDisbursementId   string               `protobuf:"bytes,2,opt,name=bulkDisbursementId,proto3" json:"bulkDisbursementId,omitempty"`
	BulkDisbursementName string               `protobuf:"bytes,3,opt,name=bulkDisbursementName,proto3" json:"bulkDisbursementName,omitempty"`
	TotalAmount          float64              `protobuf:"fixed64,4,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	Uploader             string               `protobuf:"bytes,5,opt,name=uploader,proto3" json:"uploader,omitempty"`
	Status               float32              `protobuf:"fixed32,6,opt,name=status,proto3" json:"status,omitempty"`
	StatusCount          *BulkFileStatusCount `protobuf:"bytes,7,opt,name=statusCount,proto3" json:"statusCount,omitempty"`
	Reason               string               `protobuf:"bytes,8,opt,name=reason,proto3" json:"reason,omitempty"`
	UpdatedBy            string               `protobuf:"bytes,9,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
}

func (x *BulkFile) Reset() {
	*x = BulkFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkFile) ProtoMessage() {}

func (x *BulkFile) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkFile.ProtoReflect.Descriptor instead.
func (*BulkFile) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{8}
}

func (x *BulkFile) GetCreatedDateTime() string {
	if x != nil {
		return x.CreatedDateTime
	}
	return ""
}

func (x *BulkFile) GetBulkDisbursementId() string {
	if x != nil {
		return x.BulkDisbursementId
	}
	return ""
}

func (x *BulkFile) GetBulkDisbursementName() string {
	if x != nil {
		return x.BulkDisbursementName
	}
	return ""
}

func (x *BulkFile) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *BulkFile) GetUploader() string {
	if x != nil {
		return x.Uploader
	}
	return ""
}

func (x *BulkFile) GetStatus() float32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BulkFile) GetStatusCount() *BulkFileStatusCount {
	if x != nil {
		return x.StatusCount
	}
	return nil
}

func (x *BulkFile) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BulkFile) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type BulkFileStatusCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaildEntries      int32 `protobuf:"varint,1,opt,name=vaildEntries,proto3" json:"vaildEntries,omitempty"`
	VerifiedInquiries int32 `protobuf:"varint,2,opt,name=verifiedInquiries,proto3" json:"verifiedInquiries,omitempty"`
	DibursedEntries   int32 `protobuf:"varint,3,opt,name=dibursedEntries,proto3" json:"dibursedEntries,omitempty"`
}

func (x *BulkFileStatusCount) Reset() {
	*x = BulkFileStatusCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkFileStatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkFileStatusCount) ProtoMessage() {}

func (x *BulkFileStatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkFileStatusCount.ProtoReflect.Descriptor instead.
func (*BulkFileStatusCount) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{9}
}

func (x *BulkFileStatusCount) GetVaildEntries() int32 {
	if x != nil {
		return x.VaildEntries
	}
	return 0
}

func (x *BulkFileStatusCount) GetVerifiedInquiries() int32 {
	if x != nil {
		return x.VerifiedInquiries
	}
	return 0
}

func (x *BulkFileStatusCount) GetDibursedEntries() int32 {
	if x != nil {
		return x.DibursedEntries
	}
	return 0
}

var File_file_proto protoreflect.FileDescriptor

var file_file_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x6c, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6c, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xb7, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x48, 0x01, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x5d, 0x0a, 0x09, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x6c, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x6c, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x91,
	0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x6c, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x75, 0x6c, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a,
	0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x6c, 0x6b, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x75, 0x6c, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xd6, 0x03, 0x0a, 0x10, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x33, 0x0a, 0x12, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12,
	0x62, 0x75, 0x6c, 0x6b, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x14, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x69, 0x73,
	0x62, 0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x14, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x69, 0x73, 0x62, 0x75,
	0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x62, 0x75, 0x6c,
	0x6b, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42,
	0x17, 0x0a, 0x15, 0x5f, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xb0, 0x02, 0x0a, 0x11, 0x42,
	0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x62, 0x75, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x08, 0x62, 0x75, 0x6c, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdc, 0x02,
	0x0a, 0x08, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x69, 0x73, 0x62,
	0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x69, 0x73, 0x62,
	0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x91, 0x01, 0x0a,
	0x13, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x61, 0x69, 0x6c, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x61, 0x69, 0x6c,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x62, 0x75, 0x72, 0x73,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x64, 0x69, 0x62, 0x75, 0x72, 0x73, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x32, 0xd3, 0x03, 0x0a, 0x0f, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x12, 0x92, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x49,
	0x3a, 0x01, 0x2a, 0x5a, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x6f, 0x66, 0x2d, 0x62, 0x75, 0x6b, 0x2d, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x6f, 0x66, 0x2d, 0x62, 0x75, 0x6b, 0x2d, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x49, 0x3a,
	0x01, 0x2a, 0x5a, 0x25, 0x3a, 0x01, 0x2a, 0x32, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x66, 0x2d, 0x62, 0x75, 0x6b, 0x2d, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x32, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6f, 0x66, 0x2d, 0x62, 0x75, 0x6b, 0x2d, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x09, 0x42, 0x75, 0x6c,
	0x6b, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x11, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x42, 0x75, 0x6c, 0x6b,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x51, 0x5a, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x66, 0x2d, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x66, 0x2d, 0x62, 0x75, 0x6c, 0x6b, 0x2d, 0x64,
	0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x75, 0x6c, 0x6b,
	0x2d, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x70, 0x62, 0x2f, 0x66, 0x69, 0x6c,
	0x65, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_file_proto_rawDescOnce sync.Once
	file_file_proto_rawDescData = file_file_proto_rawDesc
)

func file_file_proto_rawDescGZIP() []byte {
	file_file_proto_rawDescOnce.Do(func() {
		file_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_file_proto_rawDescData)
	})
	return file_file_proto_rawDescData
}

var file_file_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_file_proto_goTypes = []interface{}{
	(*UploadBulkFileRequest)(nil),    // 0: UploadBulkFileRequest
	(*UploadBulkFileResponse)(nil),   // 1: UploadBulkFileResponse
	(*ErrorData)(nil),                // 2: ErrorData
	(*File)(nil),                     // 3: File
	(*UpdateBulkStatusRequest)(nil),  // 4: UpdateBulkStatusRequest
	(*UpdateBulkStatusResponse)(nil), // 5: UpdateBulkStatusResponse
	(*BulkFilesRequest)(nil),         // 6: BulkFilesRequest
	(*BulkFilesResponse)(nil),        // 7: BulkFilesResponse
	(*BulkFile)(nil),                 // 8: BulkFile
	(*BulkFileStatusCount)(nil),      // 9: BulkFileStatusCount
	(*common.Pagination)(nil),        // 10: common.Pagination
}
var file_file_proto_depIdxs = []int32{
	3,  // 0: UploadBulkFileResponse.file:type_name -> File
	2,  // 1: UploadBulkFileResponse.errors:type_name -> ErrorData
	8,  // 2: BulkFilesResponse.bulkList:type_name -> BulkFile
	10, // 3: BulkFilesResponse.pagination:type_name -> common.Pagination
	9,  // 4: BulkFile.statusCount:type_name -> BulkFileStatusCount
	0,  // 5: BulkFileHandler.UploadBulkFile:input_type -> UploadBulkFileRequest
	4,  // 6: BulkFileHandler.UpdateBulkFileStatus:input_type -> UpdateBulkStatusRequest
	6,  // 7: BulkFileHandler.BulkFiles:input_type -> BulkFilesRequest
	1,  // 8: BulkFileHandler.UploadBulkFile:output_type -> UploadBulkFileResponse
	5,  // 9: BulkFileHandler.UpdateBulkFileStatus:output_type -> UpdateBulkStatusResponse
	7,  // 10: BulkFileHandler.BulkFiles:output_type -> BulkFilesResponse
	8,  // [8:11] is the sub-list for method output_type
	5,  // [5:8] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_file_proto_init() }
func file_file_proto_init() {
	if File_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBulkFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBulkFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBulkStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBulkStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkFileStatusCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_file_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_file_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_file_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_proto_goTypes,
		DependencyIndexes: file_file_proto_depIdxs,
		MessageInfos:      file_file_proto_msgTypes,
	}.Build()
	File_file_proto = out.File
	file_file_proto_rawDesc = nil
	file_file_proto_goTypes = nil
	file_file_proto_depIdxs = nil
}
